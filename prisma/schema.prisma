// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String   @unique
  name     String
  googleID    String @unique
  tokenExpiry        DateTime?  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  limit      Int?      @default(5)


  @@index([id,email])
  Chat Chat[]
}

model Chat {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  type        TYPE
  topic       String
  messages    Message[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  collectionName String?
  status status @default(WAITING)
  @@index([id,userId])
}
enum status {
  WAITING
  PROCESSING
  COMPLETED
  FAILED
}
model URL {
  id          String   @id @default(uuid())
  url         String @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  collectionName String

  @@index([id,url])
}
model Message {
  id          String   @id @default(uuid())
  chatId      String
  chat        Chat     @relation(fields: [chatId], references: [id])
  content     String
  Sender      Sender 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([id,chatId])
}
enum TYPE {
  URL
  PDF
}
enum Sender {
  USER
  ASSISTANT
}